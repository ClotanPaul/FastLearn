@model IEnumerable<ProiectLicenta.Data.Models.Course>

@{
    ViewBag.Title = "Index";
}

<style>

    .card {
        background: #f8f9fa;
        border-radius: 5px;
        padding: 20px;
        margin-top: 20px;
        margin-bottom: 20px;
        height: 510px;
        width: auto;
        border-radius: 20px;
        border: 1px solid #b4b4b4;
    }

    .card-img-top {
        width: 320px;
        height: 200px;
        border-radius: 15px; /* Adjust the px value to get the roundness you want */
        border: 2px solid #000000; /* Adjust the px value and color to get the border thickness and color you want */
    }

    .card-title {
        font-weight: bold;
        font-size: 18px;
        height: 18px;
        max-width: 300px;
        overflow: hidden;
        text-overflow: ellipsis;
        margin-top: 15px;
        margin-bottom: 15px;
    }

    #card-desc {
        height: 60px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    #chaptersB {
        margin-right: 5px;
    }

    #reviewsB {
        margin-right: 5px;
    }

    #ceva {
        margin-bottom: 10px;
    }

    #button-space{
        margin-bottom: 25px;
    }

    

</style>



<h2 class="text-left text-primary">Inactive Course List</h2>



<div class="container">
    <div class="row">
        @foreach (var item in Model)
        {

            <div class="col-md-4 mb-4">
                <div class="card">
                    @if (item.ImagePath != null)
                    {
                        <img src="@Url.Content(item.ImagePath)" class="card-img-top" alt="Course Image">
                    }
                    else
                    {
                        <img src="~/Content/images/proiectLicentaPhoto.jpg" class="card-img-top" alt="Course Image"> <text>Image</text>
                    }
                    <div class="card-body flex-container">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.CourseName)</h5>
                        <p class="card-text" id="card-desc">@Html.DisplayFor(modelItem => item.CourseDescription)</p>
                        @if (item.IssueResolved)
                        {
                            <p class=" card-text"> <strong>The user requests a review of the deactivation.</strong></p>
                        }

                        @if (User.IsInRole("admin") || (item.OwnerId == (string)ViewData["userId"] && item.OwnerId != null))
                        {
                            if (!item.Active)
                            {

                                <p class="card-text" , id="button-space"><strong>Deactivation Reason:</strong> @Html.DisplayFor(modelItem => item.DeactivationReason)</p>

                            }

                        }
                        <div class="text-center">
                            <div id="ceva">
                                @Html.ActionLink("Chapters", "Index", "Chapter", new { courseId = item.CourseId }, new { @class = "btn btn-primary", @id = "chaptersB" })
                                @Html.ActionLink("Show Reviews", "Index", "CourseReview", new { courseId = item.CourseId }, new { @class = "btn btn-primary", @id = "reviewsB" })
                            </div>
                            @if (User.IsInRole("admin"))
                            {
                                @Html.ActionLink("Activate Course", "ActivateCourse", new { id = item.CourseId }, new { @class = "btn btn-primary", @id = "chaptersB" })
                            }
                            @if (item.IssueResolved)
                            {
                                @Html.ActionLink("Reject Course Activation", "RejectActivation", new { courseId = item.CourseId }, new { @class = "btn btn-primary", @id = "reviewsB" })
                            }
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
</div>