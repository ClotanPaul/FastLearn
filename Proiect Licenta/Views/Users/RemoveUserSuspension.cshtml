@model Proiect_Licenta.Models.UserData

@{
    ViewBag.Title = "RemoveUserSuspension";
}

<h2 class="text-left text-primary">Remove User Suspension</h2>

<style>
    .form-horizontal {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
        margin: auto;
    }

    .form-horizontal h4 {
        color: #333;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .showInline {
        display: inline-block;
    }

    .control-label {
        text-align: left;
        padding-top: 7px;
    }

    .btn-default {
        background-color: #007bff;
        color: #fff;
        border: none;
        transition: background-color 0.2s ease;
    }

        .btn-default:hover {
            background-color: #0056b3;
        }

    .back-link {
        margin-top: 20px;
        text-align: left;
    }
</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h4 class="text-left">Do you want to unsuspend @Model.Email?</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserDataId)
                @Html.HiddenFor(model => model.UserId)

            <table class="table">
                <tr>
                    <td>
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.SuspendedUntil, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.SuspendedUntil, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SuspendedUntil, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.IsSuspended, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        <div class="checkbox">
                            @Html.DisplayFor(model => model.IsSuspended)
                            @Html.ValidationMessageFor(model => model.IsSuspended, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>
            </table>

                <div class="form-group">
                    <div class="col-md-10 text-left">
                        <input type="submit" value="Remove User Suspension" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        </div>

}
@if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
    {
        <li>@Html.ActionLink("Go Back to AdminPanel", "UsersDetails", "Users")</li>
    }

