@model Proiect_Licenta.Models.UserData

@{
    ViewBag.Title = "RemoveUserSuspension";
}



<style>
    .form-horizontal {
        padding: 20px;
        border-radius: 5px;
        margin: auto;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .btn-default {
        background-color: #007bff;
        color: #fff;
        border: none;
        transition: background-color 0.2s ease;
    }

        .btn-default:hover {
            background-color: #0056b3;
        }

    #h3 {
        margin-top: 40px;
        text-align: center;
        margin-bottom: 10px;
    }

    #info-box {
        background: #f8f9fa;
        padding: 20px;
        margin-bottom: 25px;
        border-radius: 10px;
        width: 55%;
        text-align: left;
        padding-left: 30px;
        border: 1px solid #b4b4b4;
    }

    .btn {
        margin-right: 20px;
    }

    #button-line {
        width: auto;
        width: 603px;
        margin-left: -30px;
        margin-bottom: 20px;
        border-top: 15px;
        border-bottom: 0.1rem groove #b4b4b4;
    }
</style>


<h2 id="h3">Remove Suspension</h2>
<center>
@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div id="info-box">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserDataId)
        @Html.HiddenFor(model => model.UserId)

        <div>
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })<b>:</b>

            @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div>
            @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label" })<b>:</b>

            @Html.DisplayFor(model => model.UserRole, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
        </div>

        <div style=" margin-top: 0px;margin-bottom: 20px;">
            @Html.LabelFor(model => model.SuspendedUntil, htmlAttributes: new { @class = "control-label" })<b>:</b>

            @Html.DisplayFor(model => model.SuspendedUntil, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SuspendedUntil, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-bottom: 0px;">
            <div class="text-center">
                <input type="submit" value="Remove Suspension" class="btn btn-success" />
                @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                {
                    @Html.ActionLink("Abort", "UsersDetails", "Users", null, new { @class = "btn btn-danger", @style = "margin-right = 0px;" })
                }
            </div>
        </div>
    </div>
    
}
    </center>


